"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title)
glm_fit
glm_fit %>%
knitr::kable()
kable
glm_fit %>%
knitr::kable(caption = "Table 1")
glm_fit %>%
knitr::kable(caption = "Table 1", digits = 2)
# we technically preregistered as running two of these? but i'm pretty sure this is equivalent...
glm_control <-
glm(as_predicted ~ toySide + toyType + experimenter + confederate,
family = "binomial",
data = modified_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title)
glm_control
# we technically preregistered as running two of these? but i'm pretty sure this is equivalent...
glm_control <-
glm(as_predicted ~ toySide + toyType + experimenter + confederate,
family = "binomial",
data = modified_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title) %>%
knitr::kable(caption = "Table 2", digits =  2)
# we technically preregistered as running two of these? but i'm pretty sure this is equivalent...
glm(as_predicted ~ toySide + toyType + experimenter + confederate,
family = "binomial",
data = modified_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title) %>%
knitr::kable(caption = "Table 2", digits =  2)
# we technically preregistered as running two of these? but i'm pretty sure this is equivalent...
glm(as_predicted ~ toySide + toyType + experimenter + confederate,
family = "binomial",
data = modified_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title) %>%
knitr::kable(caption = "Table 2", digits =  2)
# we technically preregistered as running two of these? but i'm pretty sure this is equivalent...
glm(as_predicted ~ toySide + toyType + experimenter + confederate,
family = "binomial",
data = modified_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title) %>%
knitr::kable(caption = "Table 2", digits =  2)
source('thesis.md')
knit('thesis.Rmd')
source('thesis.md')
knit('thesis.Rmd')
source('thesis.md')
knit('thesis.Rmd')
three_between_help
summary_three_toy
three_within_help
age_stats
glm_fit
age_stats
age_stats <-
glm_fit %>%
filter(term == "age") %>%
mutate_all(funs(round(., 2)))
?mutate_all
?round
age_stats <-
glm_fit %>%
filter(term == "age") %>%
mutate_all(funs(round(., 2)))
glm_fit %>%
filter(term == "age") %>%
mutate_all(funs(round(., 2)))
glm_fit
glm_fit <-
glm(firstChoiceCorrect ~ condition + age,
family = "binomial",
data = three_toy_tidy) %>%
tidy()
glm_fit
age_stats <-
glm_fit %>%
filter(term == "age") %>%
mutate_all(funs(round(., 2)))
glm_fit %>%
filter(term == "age")
age_stats <-
glm_fit %>%
filter(term == "age") %>%
mutate_at(vars(-term), funs(round(., 2)))
age_stats
condition_stats <-
glm_fit %>%
filter(term == "conditionBroken Button") %>%
mutate_at(vars(-term), funs(round(., 2)))
condition_stats
glm_fit <-
glm(firstChoiceCorrect ~ condition + age,
family = "binomial",
data = three_toy_tidy) %>%
tidy()
age_stats <-
glm_fit %>%
filter(term == "age") %>%
mutate_at(vars(-term), funs(round(., 2)))
condition_stats <-
glm_fit %>%
filter(term == "conditionBroken Button") %>%
mutate_at(vars(-term), funs(round(., 2)))
age_stats
glm_fit
glm_fit <-
glm(firstChoiceCorrect ~ condition + age,
family = "binomial",
data = three_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode("Intercept" = "(Intercept)",
"condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
mutate_at(vars(-term), funs(round(., 2))) %>%
rename(Term = term,
Estimate = estimate,
SE = std.error,
`Z statistic` = statistic,
p_value = p.value)
glm(firstChoiceCorrect ~ condition + age,
family = "binomial",
data = three_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode("Intercept" = "(Intercept)",
"condition:Broken Button" = "conditionBroken Button",
"Age" = "age"))
glm_fit <-
glm(firstChoiceCorrect ~ condition + age,
family = "binomial",
data = three_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
mutate_at(vars(-term), funs(round(., 2))) %>%
rename(Term = term,
Estimate = estimate,
SE = std.error,
`Z statistic` = statistic,
p_value = p.value)
glm_fit
glm_fit <-
glm(firstChoiceCorrect ~ condition + age,
family = "binomial",
data = three_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
mutate_at(vars(-term), funs(round(., 2))) %>%
rename(Term = term,
Estimate = estimate,
SE = std.error,
`Z statistic` = statistic,
p_value = p.value)
age_stats <-
glm_fit %>%
filter(term == "age")
glm_fit <-
glm(firstChoiceCorrect ~ condition + age,
family = "binomial",
data = three_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
mutate_at(vars(-term), funs(round(., 2))) %>%
rename(Term = term,
Estimate = estimate,
SE = std.error,
`Z statistic` = statistic,
p_value = p.value)
age_stats <-
glm_fit %>%
filter(Term == "age")
condition_stats <-
glm_fit %>%
filter(Term == "conditionBroken Button")
knitr::kable(glm_fit)
fig_num_counter()
caption_figure()
knitr::kable(glm_fit, caption = fig_num_counter)
source('thesis_code.R')
knit('thesis.Rmd')
age_stats
age_stats <-
glm_fit %>%
filter(Term == "Age")
age_stats
glm_fit <-
glm(firstChoiceCorrect ~ condition + age,
family = "binomial",
data = three_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
mutate_at(vars(-term), funs(round(., 2))) %>%
rename(Term = term,
Estimate = estimate,
SE = std.error,
`Z statistic` = statistic,
p_value = p.value)
glm_fit %>%
filter(Term == "Age")
glm_fit <-
glm(firstChoiceCorrect ~ condition + age,
family = "binomial",
data = three_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
mutate_at(vars(-term), funs(round(., 2))) %>%
rename(Term = term,
Estimate = estimate,
SE = std.error,
`Z statistic` = statistic,
p_value = p.value)
age_stats <-
glm_fit %>%
filter(Term == "Age")
condition_stats <-
glm_fit %>%
filter(Term == "condition:Broken Button")
glm_control <-
glm(firstChoiceCorrect ~ toySide + experimenter + confederate,
family = "binomial",
data = two_toy_tidy)
glm_fit <-
glm(firstChoiceCorrect ~ condition + age,
family = "binomial",
data = two_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title)
age_stats <-
glm_fit %>%
filter(Term == "age")
condition_stats <-
glm_fit %>%
filter(Term == "conditionBroken Button")
glm_fit %>%
knitr::kable(caption = c("Table ",fig_num_counter), digits = 2)
source('thesis_code.R')
knit('thesis.Rmd')
source('thesis_code.R')
rmarkdown::render('thesis.Rmd')
glm_fit
glm_control
glm(firstChoiceCorrect ~ toySide + experimenter + confederate,
family = "binomial",
data = two_toy_tidy) %>%
tidy()
glm_control <-
glm(firstChoiceCorrect ~ toySide + experimenter + confederate,
family = "binomial",
data = two_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title) %>%
mutate_at(vars(-term), round(., 2))
glm_control <-
glm(firstChoiceCorrect ~ toySide + experimenter + confederate,
family = "binomial",
data = two_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title) %>%
mutate_at(vars(-Term), round(., 2))
glm_control
glm(firstChoiceCorrect ~ toySide + experimenter + confederate,
family = "binomial",
data = two_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title)
glm_control <-
glm(firstChoiceCorrect ~ toySide + experimenter + confederate,
family = "binomial",
data = two_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title) %>%
mutate_at(vars(-Term), round(., 2))
glm(firstChoiceCorrect ~ toySide + experimenter + confederate,
family = "binomial",
data = two_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title)
glm(firstChoiceCorrect ~ toySide + experimenter + confederate,
family = "binomial",
data = two_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
mutate_at(vars(-term), round(., 2))
glm_control <-
glm(firstChoiceCorrect ~ toySide + experimenter + confederate,
family = "binomial",
data = two_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
mutate_at(vars(- term), round(., 2))
?mutate_if
glm_control <-
glm(firstChoiceCorrect ~ toySide + experimenter + confederate,
family = "binomial",
data = two_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
mutate_if(is.numeric, round(., 2))
glm_control <-
glm(firstChoiceCorrect ~ toySide + experimenter + confederate,
family = "binomial",
data = two_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title) %>%
glm_control
glm_control <-
glm(firstChoiceCorrect ~ toySide + experimenter + confederate,
family = "binomial",
data = two_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title)
glm_control
glm_control <-
glm(firstChoiceCorrect ~ toySide + experimenter + confederate,
family = "binomial",
data = two_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title) %>%
mutate_if(is.numeric, round(., 2))
glm_control <-
glm(firstChoiceCorrect ~ toySide + experimenter + confederate,
family = "binomial",
data = two_toy_tidy) %>%
tidy() %>%
mutate(term = fct_recode(term,
"Intercept" = "(Intercept)",
"Condition:Broken Button" = "conditionBroken Button",
"Age" = "age")) %>%
rename(SE = std.error,
`Z statistic` = statistic,
`p-value` = p.value) %>%
rename_at(vars(term, estimate), str_to_title) %>%
mutate_at(vars(-Term), funs(round(., 2)))
glm_control
glm_control %>%
knitr::kable(caption = c("Table ",fig_num_counter), digits = 2)
two_between_response
plot_responses(two_toy_tidy)
summary_two_toy
two_within_response
summary_two_toy
summary_two_toy$num_bb
two_between_response
two_within_response
# Response: Within condition differences -- 2 two-tailed binomial tests
two_within_response <-
two_toy_tidy %>%
within_condition_response(digits = 2)
two_within_response
collapsed_help
two_collapsed_help
summary_modified
modified_within_response
modified_within_response <-
modified_tidy %>%
within_condition_response(digits = 9)
modified_within_response
modified_between_response <-
modified_tidy %>%
between_response_stats(digits = 9) %>%
mutate_at(contains("p_value"), funs(round(., 2)))
modified_tidy %>%
between_response_stats(digits = 9)
modified_between_response <-
modified_tidy %>%
between_response_stats(digits = 9) %>%
modified_within_response <-
modified_tidy %>%
within_condition_response(digits = 9) %>%
mutate_at(contains("p_value"), funs(round(., 2)))
modified_tidy %>%
within_condition_response(digits = 9) %>%
mutate_at(contains("p_value"), funs(round(., 2)))
modified_tidy %>%
within_condition_response(digits = 9)
modified_within_response <-
modified_tidy %>%
within_condition_response(digits = 9) %>%
mutate_at(vars(contains("p_value")), funs(round(., 2)))
modified_within_response
modified_between_response <-
modified_tidy %>%
between_response_stats(digits = 9) %>%
mutate_at(vars(contains("p_value")), funs(round(., 2)))
modified_between_response
modified_tidy %>%
between_response_stats(digits = 9)
