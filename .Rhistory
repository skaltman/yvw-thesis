dx_final <-
dx_master %>%
select(patient_id, visit_id, code) %>%
mutate(code = as.character(code)) %>%
left_join(mapping_tibble %>% filter(code_source == "dx"), by = "code") %>%
select(patient_id, visit_id, -code, code = new_num)
all_codes <-
meds_final %>%
bind_rows(px_final) %>%
bind_rows(dx_final) %>%
arrange(patient_id, visit_id)
visit_seps <-
tibble(patient_id = all_codes$patient_id,
visit_id = all_codes$visit_id,
code = -2L,
sep = TRUE) %>%
distinct()
patient_seps <-
tibble(patient_id = unique(all_codes$patient_id),
visit_id = -1L,
code = -1L,
sep = TRUE)
codes_with_seps <-
all_codes %>%
mutate(sep = FALSE) %>%
bind_rows(visit_seps) %>%
bind_rows(patient_seps) %>%
arrange(patient_id, desc(visit_id), sep) %>%
select(code)
py_save_object(codes_with_seps, filename = "codes_with_seps", pickle = "cPickle")
library(reticulate)
cPickle <- import("cPickle")
#py_save_object(list(codes_list), filename = "codes_list", pickle = "cPickle")
#View(py_load_object("codes_list"))
setwd("~/GitHub/med2vec")
py_save_object(codes_with_seps, filename = "codes_with_seps", pickle = "cPickle")
min(codes_with_seps %>% filter(code > 0) %>% pull(code))
max(mapping_tibble$new_num)
codes_to_use %>% filter(str_detect(code, "\\.$"))
px_cpt_codes %>% filter(code == "92310.")
tibble(code = px_cpt_codes) %>% filter(code == "92310.")
x_master %>% filter(code == "92310.")
px_master %>% filter(code == "92310.")
px_master %>% filter(code == "92310")
tbl(con, "px_master") %>% filter(code == "92310/")
tbl(con, "px_master") %>% filter(code == "92310.")
tbl(con, "px_master") %>% filter(code == "92310")
tbl(con, "px_master") %>% filter(code == "92310.")
diamonds %>% head()
library(tidyverse)
diamonds
diamonds %>%  mutate_at(vars(cut, color, clarity), funs(str_to_lower))
diamonds %>%  mutate_if(~ is.character, funs(str_to_lower))
?mutate_if
diamonds %>%  mutate_if(is.character, funs(str_to_lower))
?round
diamonds %>%  mutate_if(is.double, funs(round), digits = 2)
diamonds %>%  mutate_if(is.double, funs(round))
diamonds %>% summarise_af(is.numeric, funs(mean), na.rm = TRUE)
diamonds %>% summarise_if(is.numeric, funs(mean), na.rm = TRUE)
diamonds %>% summarise_at(vars(x, y), funs(mean))
?filter_all
diamonds %>% filter_all(all_vars(!is.na))
diamonds %>% filter_all(all_vars(!is.na(.)))
diamonds
diamonds %>% filter_all(any_vars(!is.na(.)))
diamonds %>% filter_all(any_vars(is.na(.)))
diamonds %>% summary()
mtcars %>% summary()
nycflights13::airports
nycflights13::flights %>% summary()
library(nycflights13)
flights %>% filter_all(any_vars(is.na))
flights %>% filter_all(any_vars(is.na(.)))
flights %>% filter_all(any_vars(funs(is.na)))
flights %>% filter_all(all_vars(!is.na(.)))
flights %>% filter_at(vars(contains("arr_")), funs(!is.na(.)))
flights %>% filter_at(vars(contains("arr_")), all_vars(!is.na(.)))
flights %>% filter_if(is.numeric, all_vars(!is.na(.)))
flights
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
early_helpers <-
two_toy_tidy %>%
filter(`#ConfedPrompts` == 0, `#ExpPrompts` == 0) %>%
count(firstChoice) %>%
spread(firstChoice, nn) %>%
rename(confed = `Confederate's toy`,
other = `Other toy`) %>%
mutate(total = confed + other)
source('thesis_code.R')
knitr::knit('thesis.Rmd')
setwd("~/GitHub/skaltman/yvw-thesis")
source('thesis_code.R')
knitr::knit('thesis.Rmd')
?summarise_at
?filter_at
?select_all
diamonds
diamonds %>% select_all(funs(str_to_title))
diamonds %>% select_at(vars(starts_with("c")), funs(str_to_title))
diamonds %>% select_if(is.numeric, funs(str_to_title))
?mutate_all
diamonds %>% select_at(carat, color)
diamonds %>% select_at(c("carat", "color"))
diamonds %>% select_at(vars(carat, color))
diamonds %>% mutate_at(vars(x, y, z), funs(round))
diamonds %>% mutate_at(vars(x, y, z), funs(round(., digits = 2)))
diamonds %>% mutate_at(vars(x, y, z), funs(. / 4 > 1))
diamonds %>% mutate_at(vars(x, y, z), funs(. % 1 == 0))
diamonds %>% mutate_at(vars(x, y, z), funs(. %% 1 == 0))
?filter_if
diamonds %>% filter_all(any_vars(is.na))
diamonds %>% filter_all(any_vars(str_detect(., "V")))
diamonds %>% filter_at(vars(x, y, z), all_vars(. %% 1 == 0))
knitr::opts_chunk$set(echo = TRUE)
library(nycflights13)
library(tidyverse)
library(nycflights13)
nycflights13::airlines
nycflights13::airports
nycflights13::weather
nycflights13::flights
nycflights::weather
nycflights13::weather
weather %>%
ggplot(aes(wind_dir)) +
geom_histogram()
weather
weather %>%
filter_at(vars(dewp, humid), all_vars(is.na(.)))
weather
weather %>%
filter_at(vars(dewp, humid), all_vars(. > mean(.)))
weather %>%
filter_at(vars(dewp, humid), all_vars(. >= mean(.)))
weather %>%
filter_at(vars(dewp, humid), all_vars(. < mean(.)))
?filter_at
weather %>%
filter_at(vars(dewp, humid), all_vars(. < mean(., na.rm = TRUE)))
weather %>%
filter_at(vars(dewp, humid), all_vars(. > mean(., na.rm = TRUE)))
weather %>%
filter_at(vars(dewp, humid), all_vars(. == mean(., na.rm = TRUE)))
weather %>%
filter_at(vars(dewp, humid), all_vars(near(., mean(., na.rm = TRUE))))
?near
weather %>%
filter_at(vars(dewp, humid), all_vars(near(., mean(., na.rm = TRUE, tol = .02))))
weather %>%
filter_at(vars(dewp, humid), all_vars(near(., mean(., na.rm = TRUE, tol = .2))))
weather %>%
filter_at(vars(dewp, humid), all_vars(near(., mean(., na.rm = TRUE, tol = 1))))
weather %>%
filter_at(vars(dewp, humid), all_vars(. > mean(., na.rm = TRUE)))
weather %>%
summarise_at(vars(dewp, humid), funs(mean))
weather %>%
summarise_at(vars(dewp, humid), funs(mean, na.rm = TRUE))
weather %>%
summarise_at(vars(dewp, humid), funs(mean), na.rm = TRUE)
weather %>%
filter(dewp > 41.3854,
humid > 62.34732)
weather %>%
filter_at(vars(dewp, humid), all_vars(. > mean(., na.rm = TRUE)))
weather
weather
weather %>%
select_at(vars(starts_with("wind")), funs(str_remove(., ".*_")))
weather %>%
select_at(vars(starts_with("wind")), funs(str_remove(., "\\w*_")))
weather %>%
select_at(vars(starts_with("wind")), funs(str_remove(., "wind_")))
weather %>%
summarise_if(is.numeric, funs(mean))
weather %>%
summarise_if(is.numeric, funs(median), na.rm = TRUE)
weather
weather %>%
summarise_all(funs(sum(is.na(.))))
weather %>%
summarise_all(funs(sum(is.na(.))))
weather %>%
filter_if(~ mean(.) %% 1 > 0, any_vars(. %% 1 == 0))
weather %>%
filter_if(~ is.double(.) && mean(.) %% 1 > 0, any_vars(. %% 1 == 0))
weather %>%
filter_if(~ is.double(.) & mean(.) %% 1 > 0, any_vars(. %% 1 == 0))
weather %>%
filter_if(~ is.double(.), any_vars(. %% 1 == 0))
weather %>% select_if(is.double)
typeof(weather$time_hour)
class(weather$time_hour)
weather %>%
filter_if(~ class(.) != "POSIXct", any_vars(. %% 1 == 0))
weather %>% select_if(class(.) == "POSIXct")
weather %>% select_if(~ class(.) == "POSIXct")
weather %>% select_if(is.double)
weather %>% select_if(~ is.double(.))
weather %>% select_if(~ (class(.) != "POSIXct"))
weather %>% summaries_all(class)
weather %>% summarise_all(class)
weather %>% summarise_all(typeof)
?getClass
?class
weather %>%
filter_if(~ mean(.) %% 1 == 0, any_vars(. %% 1 == 0))
weather %>%
select(- time_hour) %>%
filter_if(~ mean(.) %% 1 == 0, any_vars(. %% 1 == 0))
weather %>%
select(- time_hour) %>%
filter_if(~ mean(., na.rm = TRUE) %% 1 == 0, any_vars(. %% 1 == 0))
weather %>%
select(-time_hour)
weather %>%
select_if(~ mean(., na.rm = TRUE) %% 1 == 0)
weather %>%
select(-time_hour) %>%
select_if(~ mean(., na.rm = TRUE) %% 1 == 0)
weather %>%
select(-time_hour) %>%
select_if(~ mean(., na.rm = TRUE) %% 1 > 0)
weather %>%
select(-time_hour) %>%
select_if(~ mean(., na.rm = TRUE) %% 1)
weather %>%
select(-time_hour) %>%
filter_if(~ (mean(., na.rm = TRUE) %% 1) == 0, any_vars(. %% 1 == 0))
weather %>%
select(-time_hour) %>%
filter_if(~ (mean(., na.rm = TRUE) %% 1) == 0, any_vars(~ . %% 1 == 0))
weather %>%
select(-time_hour) %>%
filter_if(~ (mean(., na.rm = TRUE) %% 1) == 0, any_vars(. %% 1 == 0))
weather %>%
select(-time_hour) %>%
filter_all(any_vars(!is.na(.))) %>%
filter_if(~ (mean(., na.rm = TRUE) %% 1) == 0, any_vars(. %% 1 == 0))
NA %% 1
NA %% 1 == 0
6 %% 1 == 0
weather %>%
select(-time_hour) %>%
filter_if(~ (mean(., na.rm = TRUE) %% 1) == 0, any_vars(is.na(.)))
weather %>%
select(-time_hour) %>%
filter_if(~ mean(.) > 0, any_vars(is.na(.)))
weather %>%
select(-time_hour) %>%
filter_if(~ mean(., na.rm = TRUE) > 0, any_vars(is.na(.)))
weather %>%
filter_if(~ mean(., na.rm = TRUE) > 0, any_vars(is.na(.)))
weather %>%
filter_if(is.double, any_vars(is.na(.)))
weather %>%
filter_if(~ n_distinct(.) > 1, any_vars(is.na(.)))
weather %>%
filter_if(~ mean(., na.rm = TRUE) > 1, any_vars(is.na(.)))
weather %>%
filter_if(~ mean(.) > 1, any_vars(is.na(.)))
weather %>%
filter_if(~ is.double(.) & mean(., na.rm = TRUE) > 1, any_vars(is.na(.)))
weather %>%
filter_if(~ is.double(.) & mean(., na.rm = TRUE) %% 1 == 0,
any_vars())
weather %>%
filter_if(~ is.double(.) & mean(., na.rm = TRUE) %% 1 == 0,
any_vars(is.na(.)))
weather %>%
select(-time_hour) %>%
filter_if(~ is.double(.) & mean(., na.rm = TRUE) %% 1 == 0,
any_vars(is.na(.)))
weather %>%
select(-time_hour) %>%
filter_if(~ is.double(.) & mean(., na.rm = TRUE) %% 1 == 0,
any_vars(!is.na(.)))
weather %>%
select(-time_hour) %>%
filter_if(~ is.double(.) & mean(., na.rm = TRUE) %% 1 == 0,
any_vars(!is.na(.)))
weather %>%
select(-time_hour) %>%
filter_if(~ is.double(.) & mean(., na.rm = TRUE) %% 1 == 0,
any_vars(. %% 1 == 0))
weather %>%
select(-time_hour) %>%
filter_if(~ is.double(.) & mean(., na.rm = TRUE) %% 1 == 0,
all_vars(. %% 1 == 0))
weather
all_twos <-
rbind(
three_toy_tidy,
two_toy_tidy,
modified_tidy
)
two_toy_tidy
three_toy_tidy
three_toy_tidy %>%
select(videoName,
n,
condition,
age,
ageBucket,
gender,
firstChoice,
firstBehaviorCode,
helpfulCategory)
shared_vars <- c(videoName,
n,
condition,
age,
ageBucket,
gender,
firstChoice,
firstBehaviorCode,
helpfulCategory)
videoNam
shared_vars <- c("videoNam"e,
shared_vars <- c("videoNam",
"n",
"condition",
"age",
"ageBucket",
"gender",
"firstChoice",
"firstBehaviorCode",
"helpfulCategory"
)
shared_vars <- c("videoName",
"n",
"condition",
"age",
"ageBucket",
"gender",
"firstChoice",
"firstBehaviorCode",
"helpfulCategory"
)
three_toy_tidy %>%
select(shared_vars)
rbind(
three_toy_tidy %>% select(shared_vars),
two_toy_tidy %>% select(shared_vars)
)
two_toy_tidy
shared_vars <- c("videoName",
"n",
"condition",
"age",
"gender",
"firstChoice",
"firstBehaviorCode",
"helpfulCategory"
)
rbind(
three_toy_tidy %>% select(shared_vars),
two_toy_tidy %>% select(shared_vars)
)
rbind(
three_toy_tidy %>% select(shared_vars),
two_toy_tidy %>% select(shared_vars),
modified_tidy %>% select(shared_vars)
)
combined <-
rbind(
three_toy_tidy %>% select(shared_vars),
two_toy_tidy %>% select(shared_vars),
modified_tidy %>% select(shared_vars)
)
combined
combined %>%
filter(age %% 1)
combined %>%
filter(age %% 1 == 2)
combined %>%
filter(age %/% 1 == 2)
2.1 %/% 1
all_twos <-
combined %>%
filter(age %/% 1 == 2)
all_threes <-
combined %>%
fitler(age %/% 1 == 3)
all_threes <-
combined %>%
filter(age %/% 1 == 3)
all_twos
all_twos %>%
plot_responses()
all_threes %>%
plot_responses()
all_twos %>%
plot_responses()
all_threes %>%
plot_responses()
plot_responses
?str_c
plot_flip
plot_responses <- function(data, title_prefix = "") {
proportion_by_condition_plot(data,
firstChoice,
"Confederate's toy",
response_colors,
str_c(title_prefix, " Response by condition"),
"Target toy of first response",
c("Other toy", "Confederate's toy"))
}
plot_helpfulness <- function(data, title_prefix = "") {
proportion_by_condition_plot(data,
helpfulCategory,
"Helpful",
helpfulness_colors,
str_c(title_prefix, " Success of helping behavior by condition"),
"Success of helping behavior",
c("Unsuccessful", "Successful"))
}
plot_flip <- function(data, title_prefix = "") {
proportion_by_condition_plot(data,
flip,
TRUE,
flip_colors,
str_c(title_prefix, " Button type targeted by condition"),
"Target button of first response",
c("Obvious", "Non-obvious"))
}
plot_predicted <- function(data) {
proportion_by_condition_plot(data,
as_predicted,
1,
predicted_colors,
"",
"Target toy matches prediction",
plot_predicted <- function(data) {
proportion_by_condition_plot(data,
as_predicted,
1,
predicted_colors,
"",
"Target toy matches prediction",
c("No", "Yes"))
}
all_threes %>%
all_threes %>%
plot_responses(title_prefix = "All threes")
three_toy_tidy %>%
plot_responses("Experiment 1:")
three_toy_tidy %>%
plot_flip("Experiment 1:")
three_toy_tidy %>%
filter(n != 11) %>%
plot_helpfulness("Experiment 1:")
two_toy_tidy %>%
plot_responses("Experiment 2:")
two_toy_tidy %>%
plot_flip("Experiment 2:")
modified_tidy %>%
plot_responses("Experiment 3:")
modified_tidy %>%
plot_predicted("Experiment 3:")
modified_tidy %>%
plot_predicted()
#title?
modified_tidy %>%
plot_predicted()
#need to figure out title
modified_tidy %>%
plot_predicted()
plot_predicted <- function(data, title_prefix = "") {
proportion_by_condition_plot(data,
as_predicted,
1,
predicted_colors,
"Target matches prediction by condition",
"Target toy matches prediction",
c("No", "Yes"))
}
#need to figure out title
modified_tidy %>%
plot_predicted("Experiment 3:")
proportion_by_condition_plot(data,
as_predicted,
1,
predicted_colors,
str_c(title_prefix, "Target matches prediction by condition"),
"Target toy matches prediction",
c("No", "Yes"))
plot_predicted <- function(data, title_prefix = "") {
proportion_by_condition_plot(data,
as_predicted,
1,
predicted_colors,
str_c(title_prefix, "Target matches prediction by condition"),
"Target toy matches prediction",
c("No", "Yes"))
}
#need to figure out title
modified_tidy %>%
plot_predicted("Experiment 3:")
plot_predicted <- function(data, title_prefix = "") {
proportion_by_condition_plot(data,
as_predicted,
1,
predicted_colors,
str_c(title_prefix, " Target matches prediction by condition"),
"Target toy matches prediction",
c("No", "Yes"))
}
#need to figure out title
modified_tidy %>%
plot_predicted("Experiment 3:")
